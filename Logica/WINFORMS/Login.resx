<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAALhJREFUSEtjGAWj
        YGCAdobCcslknv+a2bL7oEIowKrE4KJNqdFbKJd0ALMAhtEtQpYDYagwaQDdEBCGWYRNzjrHaD9YIykA
        ZCA2w3BhqDbSAbEWQZWTDwhZBFVGOcBmOAirZUodgyqhDGAzHBmjpzqSATZDsWGyLbIqNbiEzUBQEGET
        N8rSnATVSjwA5WR0g6BSWBMDWZaAALIhUCE4QLZIPVvmCFSYPIAvJ4NcT7YPRsEooAJgYAAAMSSxa4EX
        uAcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAAFhJREFUSEtjGAWj
        YBSMglEw2IBRluYk6xyj/aRikD6oEfiBWrbUBclknv/kYqIswqaRFAzyEdQo3ACbRlIwUZZoZss+w6aZ
        WEx0vCBHJimYaAtGwUgADAwAHJWWsDOT5cQAAAAASUVORK5CYII=
</value>
  </data>
</root>